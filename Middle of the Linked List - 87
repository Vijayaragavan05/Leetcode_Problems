876. Middle of the Linked List

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

class Solution {
    public ListNode middleNode(ListNode head) {
        int count=0;
        ListNode temp = head;
        while(temp!=null){
            count++;
            temp=temp.next;
        }
        int mid = count/2;
        for(int i=0;head!=null && i<mid;i++){
            head = head.next;
        }
        return head;
    }
}

Testcase 1 :

1->2->3->4->5

Input: head = [1,2,3,4,5]
Output: [3,4,5]
--------------------------------------------------
Testcase 2 :

1->2->3->4->5->6

Input: head = [1,2,3,4,5,6]
Output: [4,5,6]

